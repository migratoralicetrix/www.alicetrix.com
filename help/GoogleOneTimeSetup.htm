<html>
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width">
        <link href="../lib/bootstrap/dist/css/bootstrap.min.css" rel="stylesheet" />
        <title>Onetime Configuration for Google</title>
    </head>
    <body>


        <h1>Onetime Configuration for Google</h1>
        <p>Google only allows authentication on JWT. Hence JSON file needs to be generated for this option. Step for creating JSON account starts with creating a Service Account for your own instance of File Migrator App in Google.&nbsp;</p>
      
        <h1>Steps to create and register Google Service account</h1>
        <p><span style="color: #0000ff;">(Reference <a href="https://cloud.google.com/iam/docs/creating-managing-service-account-keys" target="_blank" rel="noopener"> Google Developer Site </a>)</span>&nbsp;</p>
        <h2>Step A:</h2>
        <p>To generate service-account credentials, or to view the public credentials that you've already generated, do the following:</p>
        <ol>
            <li>Open the <strong><u><a href="https://console.developers.google.com/iam-admin/serviceaccounts" target="_blank" rel="noopener">Service accounts page</a></u></strong>. If prompted, select a project.</li>
            <li>Click <strong>Create service account</strong>.</li>
            <li>In the <strong>Create service account</strong> window, type a name for the service account, and select <strong>Furnish a new private key</strong>. If you want to <u><a href="https://developers.google.com/identity/protocols/OAuth2ServiceAccount#delegatingauthority" target="_blank" rel="noopener">grant G Suite domain-wide authority</a></u> to the service account, also select <strong>Enable G Suite Domain-wide Delegation</strong>. Then click <strong>Save</strong>.</li>
        </ol>
        <p>Your new public/private key pair is generated and downloaded to your machine; it serves as the only copy of this key. You are responsible for <u><a href="https://cloud.google.com/iam/docs/understanding-service-accounts#managing_service_account_keys" target="_blank" rel="noopener">storing it securely</a></u>.&nbsp;</p>
        <h2>Step B:</h2>
        <p>Now login into Alicetrix Cloud File Migrator Website and go to <a href="/Migrator/AdminConfig" target="_parent">Admin</a> settings. Select Source for upload as Google and upload JSON file here. Once uploaded, your file is saved in a local database in your Azure Website Service Directory. </p>
        <p>
            <span class="badge badge-danger">Security Considerations</span>
            JSON files are stored in your local app server database. Hence while it is difficult to retrieve,  Administrator/RDP Users of your Migrator application's Virtual Machine environment will have access to this database (as database access policies are not set at machine levels). Hence, ensure admins who have access to app server VM environment, also have access to OneDrive/SP contents.
            In future, if you want to remove this file, you can  upload a blank file in local database, using above steps. 
        </p>
        <p>&nbsp;</p>
        <h2>Step C:</h2>
        <p>Then, an administrator of the G Suite domain must complete the following steps:</p>
        <ol>
            <li>Go to your G Suite domain&rsquo;s <u><a href="http://admin.google.com/" target="_blank" rel="noopener">Admin console</a></u>.</li>
            <li>Select <strong>Security</strong> from the list of controls. If you don't see <strong>Security</strong> listed, select <strong>More controls</strong> from the gray bar at the bottom of the page, then select <strong>Security</strong> from the list of controls. If you can't see the controls, make sure you're signed in as an administrator for the domain.</li>
            <li>Select <strong>Show more</strong> and then <strong>Advanced settings</strong> from the list of options.</li>
            <li>Select <strong>Manage API client access</strong> in the <strong>Authentication</strong></li>
            <li>In the <strong>Client Name</strong> field enter the service account's <strong>Client ID </strong>(If using Factory Supplied JSON, Factory ID is visible once you enable this option in admin page). You can find your service account's client ID in the <strong><u><a href="https://console.developers.google.com/iam-admin/serviceaccounts" target="_blank" rel="noopener">Service accounts page</a></u></strong>.</li>
            <li>In the <strong>One or More API Scopes</strong> field enter the list of scopes that your application should be granted access to. For example, if your application needs domain-wide access to the Google Drive API and the Google Calendar API, enter: https://www.googleapis.com/auth/drive</li>
            <li>Click <strong>Authorize</strong>.</li>
        </ol>
        <p>Your application now has the authority to make API calls as users in your domain (to "impersonate" users). When you prepare to make authorized API calls, you specify the user to impersonate using migration or remediation tabs, help for which is provided in later sections</p>
        <p>&nbsp;</p>
        <p>&nbsp;</p>

    </body>
</html>

